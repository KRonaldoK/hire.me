#
#
# Sem container: porta 8080
#
#

# Mongodb
# Usar os comandos encontrados no projeto eclipse no mongodb
# em /us-srv-thorntail/url_repo_db.js para criar o banco e as collections

#  
# mvn package sem testes
c:\eclipse\workspace\us-srv-thorntail>mvn clean package -Dmaven.test.skip=true

# Com testes 
# Testes em junit: 
# 1) Para testar persistencia no mongodb
# 2) Para testar a api rest
  
# Classe junit com testes de cenário da api rest:
# /us-srv-thorntail/src/test/java/com/challenge/urlshortener/test/UrlShortenerServiceContainerTest.java
# Obs.: Esta classe está apontado para testes fora do container,
# o código para o container está em outra classe,
# este teste com container não está disponível no momento e não deve ser descomentado no pom.xml

c:\eclipse\workspace\us-srv-thorntail>mvn clean package

# Collection do Postman:
# /us-srv-thorntail/8080 - Url shortener service.postman_collection.json

# Para rodar a aplicacao

No eclipse: (recomendado)

Run > External Tools > External Tools Configuration
(informar aonde esta o java.exe, o diretorio target do thorntail jar, e parametros de execução)
Ex.: 
C:\Program Files\Java\jdk1.8.0_92\jre\bin\java.exe 
${workspace_loc:/us-srv-thorntail/target} 
-jar us-srv-thorntail.jar

Fora do Eclipse:

c:\eclipse\workspace\us-srv-thorntail>cd target

c:\eclipse\workspace\us-srv-thorntail\target>java -jar  us-srv-thorntail.jar

#
#
# Com container: porta 80
#
#
1) maven
# Sem testes
c:\eclipse\workspace\us-srv-thorntail>mvn clean package -Dmaven.test.skip=true

# Com testes
Não está disponível o teste para conteiner

2) Thorntail jar
# Copiar o jar do thorntail
c:\eclipse\workspace\us-srv-thorntail>copy .\target\us-srv-thorntail.jar .\us-srv-thorntail.jar
Overwrite .\us-srv-thorntail.jar? (Yes/No/All): y
        1 file(s) copied.

3) docker compose    
c:\eclipse\workspace\us-srv-thorntail>docker-compose build
c:\eclipse\workspace\us-srv-thorntail>docker-compose up

